{"version":3,"sources":["composant/NotFound/NotFound.js","composant/Acceuil/Acceuil.js","composant/NavBar/NavBar.js","composant/Panier/Panier.js","composant/Historique/Historique.js","composant/Voyage/Voyage.js","App.js","serviceWorker.js","index.js"],"names":["NotFound","react_default","a","createElement","Component","PREFIX_URL","Acceuil","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","history","showIndex","showBullets","infinite","showThumbnails","showFullscreenButton","showGalleryFullscreenButton","showPlayButton","showGalleryPlayButton","showNav","isRTL","slideDuration","slideInterval","showVideo","showMore","images","id","original","concat","originalClass","description","onclick","_redirect","prevProps","prevState","_imageGallery","pause","play","index","getCurrentIndex","id_Voyage_Courant","push","pathname","id_Voyage","className","type","aria-label","onClickCapture","bind","event","setState","defineProperty","target","value","checked","_this2","image_gallery_default","ref","i","items","lazyLoad","parseInt","additionalClass","renderCustomControls","_renderCustomControls","withRouter","checkMail","email","elem","test","String","toLowerCase","errorMsg","checkMailMdp","mdp","listRe","re","msg","count","length","item","match","NavBar","showModal","loggedIn","loading","error","initialTab","recoverPasswordSuccess","startLoading","document","querySelector","finishLoading","nom","prenom","expRegId","checkForm","axios","url","method","data","motdepasse","then","res","onLoginSuccess","_this3","response","closeModal","_this4","isLoading","Navbar","bg","variant","Brand","href","Nav","Link","to","Form","inline","Button","onClick","openModal","react_modal_login_default","visible","onCloseModal","tabs","afterChange","afterTabsChange","loginError","label","registerError","recoverPasswordError","form","onLogin","onRegister","onRecoverPassword","recoverPasswordSuccessLabel","recoverPasswordAnchor","loginBtn","registerBtn","recoverPasswordBtn","loginInputs","containerClass","inputClass","name","placeholder","registerInputs","recoverPasswordInputs","Panier","Historique","image","Voyage","location","dist","bgImage","strength","style","height","App","Router","createBrowserHistory","composant_NavBar_NavBar","Switch","Route","exact","path","component","Notfound","Boolean","window","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92aa160c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass NotFound extends Component {\n\n    render() {\n    \n      return (\n  \n        <div>404</div>\n      );\n    }\n  }\n  \n  export default NotFound;","import React, { Component } from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport {withRouter} from 'react-router-dom';\nimport './Acceuil.css';\nimport '../../../node_modules/react-image-gallery/styles/css/image-gallery.css';\nconst PREFIX_URL = '';\n\nclass Acceuil extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      showIndex: true,\n      showBullets: true,\n      infinite: true,\n      showThumbnails: false,\n      showFullscreenButton: true,\n      showGalleryFullscreenButton: true,\n      showPlayButton: true,\n      showGalleryPlayButton: true,\n      showNav: false,\n      isRTL: false,\n      slideDuration: 450,\n      slideInterval: 4500,\n      showVideo: {},\n      showMore:null,\n    };\n    this.images = [\n      {\n        id:1,\n        original: `${PREFIX_URL}saturn.jpg`,\n        originalClass: 'featured-slide',\n        description: 'Voyage pour saturne une opportunité a ne pas louper',\n        onclick:this._redirect\n      },\n      {\n        id:2,\n        original: `${PREFIX_URL}kepler-452b.jpg`,\n        originalClass: 'featured-slide',\n        description: 'Le nouvel eldorado kepler-452b, 100 premiers vols a 50%',\n        onclick:this._redirect\n      },\n      {\n        id:3,\n        original: `${PREFIX_URL}exoplanet.jpg`,\n        originalClass: 'featured-slide',\n        description: 'Planete BRZ, Partez pour bronzer !',\n        onclick:this._redirect\n      }\n    ]\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.slideInterval !== prevState.slideInterval ||\n        this.state.slideDuration !== prevState.slideDuration) {\n      this._imageGallery.pause();\n      this._imageGallery.play();\n    }\n  }\n  _redirect(){\n    let index = this._imageGallery.getCurrentIndex();\n    let id_Voyage_Courant = this.images[index].id;\n    this.state.history.push({\n      pathname: '/voyage',\n      state :{id_Voyage:id_Voyage_Courant}\n      }\n    );\n  }\n  _renderCustomControls() {\n    return <button className='image-gallery-custom' type=\"button\"  aria-label=\"Open Info\" onClickCapture={this._redirect.bind(this)}></button>\n  }\n  _handleInputChange(state, event) {\n    this.setState({[state]: event.target.value});\n  }\n\n  _handleCheckboxChange(state, event) {\n    this.setState({[state]: event.target.checked});\n  }\n\n\n    render() {\n     \n      return (\n        <div>\n          <section className='images'>\n          <ImageGallery\n            ref={i => this._imageGallery = i}\n            items={this.images}\n            lazyLoad={false}\n            infinite={this.state.infinite}\n            showBullets={this.state.showBullets}\n            showFullscreenButton={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton}\n            showPlayButton={this.state.showPlayButton && this.state.showGalleryPlayButton}\n            showIndex={this.state.showIndex}\n            showNav={this.state.showNav}\n            isRTL={this.state.isRTL}\n            slideDuration={parseInt(this.state.slideDuration)}\n            slideInterval={parseInt(this.state.slideInterval)}\n            additionalClass=\"app-image-gallery\"\n            renderCustomControls={this._renderCustomControls.bind(this)}\n          />\n          </section>\n        </div>\n\n      );\n    }\n  }\n  \n  export default withRouter(Acceuil);\n  ","import React, { Component } from 'react';\nimport {Nav, Navbar, Form, Button} from 'react-bootstrap';\nimport ReactModalLogin from \"react-modal-login\";\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport './NavBar.css';\n\nfunction checkMail(email,elem){\n    /* Une adresse e-mail, c'est\n  * des caractères : lettres, chiffres, points et tirets (hauts ou bas),\n  * un symbole \"arobase\" @,\n  * des caractères : comme au début ; au moins deux,\n  * un point,\n  * des caractères : de 2 à 4 lettres minuscules.\n  */\n let expRegMail = /^[a-z0-9._-]+@[a-z0-9._-]{2,}\\.[a-z]{2,4}$/;\n if (!expRegMail.test(String(email).toLowerCase())){\n   elem.errorMsg=\"Votre mail est incorrect\"\n   return false;\n }\n return true;\n}\nfunction checkMailMdp(email,mdp,elem){\n  if(!checkMail(email,elem)) return false;\n  /* Le mot de passe, c'est\n  * des caractères: [a-zA-Z]\n  * des chiffres : \\d,\n  * au moins un caractere special: [^A-Za-z0-9],\n  * des une taille superieure ou egale a 6 : {6,}.\n  */\n  var listRe = [{\n    re: /[a-zA-Z]/g,\n    msg: \"Votre mot de passe doit avoir des lettres en minuscule et majuscule\"\n  }, {\n    re: /\\d/g,\n    msg: \"Votre mot de passe doit avoir des chiffres\"\n  }, {\n    re: /[^A-Za-z0-9]/g,\n    count: 1,\n    msg: \"Votre mot de passe doit posséder au moins 1 caractère spécial\"\n  },\n  {\n    re: /^.{6,}$/,\n    msg: \"Votre mot de passe doit être plus grand ou égal à 6 caractères\"\n  }];\n \n  for (var i = 0; i < listRe.length; i++) {\n    var item = listRe[i];\n    var match = mdp.match(item.re);\n    if (null === match || match.length < item.count) {\n      elem.errorMsg=item.msg;\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction checkForm(nom,prenom,email,mdp,elem){\n  /* Explication exp reguliere\n  * ^ : Debut de chaine\n  * [a-z] : De a à z compris\n  *  + : {1,} Au moins une fois\n  * $ : Fin de chaine \n  */\n    let expRegId = /^[a-z]+$/;\n    if(!expRegId.test(nom)){\n      elem.errorMsg=\"Votre nom doit uniquement contenir des lettres\"\n      return false;\n    }\n    if(!expRegId.test(prenom)) {\n      elem.errorMsg=\"Votre prenom doit uniquement contenir des lettres\"\n      return false;\n      }\n    if(!checkMailMdp(email,mdp,elem))return false;\n    return true;\n}\nclass NavBar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      loggedIn: null,\n      loading: false,\n      error: null,\n      initialTab: null,\n      errorMsg: null,\n      recoverPasswordSuccess: null,\n    };\n  }\n  onLogin() {\n    this.startLoading();\n   \n    const email = document.querySelector('#email').value.toLowerCase();\n    const mdp = document.querySelector('#mdp').value;\n    this.errorMsg=null;\n    if (!checkMailMdp(email,mdp,this)) {\n      this.setState({\n        error: true\n      })\n    }\n    else{\n      this.setState({\n        error:false\n      })\n      /*\n      axios({\n        method: 'post',\n        url: 'http://localhost:4000/auth',\n        headers: {\n            'crossDomain': true,  //For cors errors \n            'Content-Type': 'application/json'\n        },\n        data: {\n            login: email,\n            mdp: password\n        }\n        }).then(res => {\n            if (res.data === \"failed\"){\n              this.setState({\n                error: true\n              })\n            }\n            \n            else {\n              console.log(res.data);\n              this.onLoginSuccess(res.data.username);\n              this.props.updateuser(res.data.id);\n            }\n        });\n    */\n    }\n    this.finishLoading();\n  }\n\n  onRegister() {\n    const nom = document.querySelector('#nom').value.toLowerCase();\n    const prenom = document.querySelector('#prenom').value.toLowerCase();\n    const email = document.querySelector('#email').value.toLowerCase();\n    const mdp = document.querySelector('#mdp').value;\n    this.errorMsg=null;\n    if (!checkForm(nom,prenom,email,mdp,this)) {\n      this.setState({\n        error: true\n      })\n    }\n    \n    else {\n      this.setState({\n        error:false\n      })\n      axios({\n        url: 'http://localhost:8080/Inscription',\n        method: 'post',\n        data: {\n          nom: nom,\n          prenom:prenom,\n          email:email,\n          motdepasse:mdp,\n        }\n      }).then(res => {\n        if (res.data === \"failed\"){\n          this.setState({\n            error: true\n          })\n        }\n        \n        else {\n          this.onLoginSuccess(nom);\n        }  \n    });\n      /*\n      axios({\n        method: 'post',\n        url: 'http://localhost:4000/register',\n        headers: {\n            'crossDomain': true,  //For cors errors \n            'Content-Type': 'application/json'\n        },\n        data: {\n            login: email,\n            mdp: password,\n            prenom: login\n        }\n        }).then(res => {\n            if (res.data === \"failed\"){\n              this.setState({\n                error: true\n              })\n            }\n            \n            else {\n              this.onLoginSuccess(login);\n            }  \n        });\n      //this.onLoginSuccess('form');\n    */\n      \n    }\n  }\n      \n  onRecoverPassword() {\n    const email = document.querySelector('#email').value;\n    this.errorMsg=null;\n    if (!checkMail(email,this)) {\n      this.setState({\n        error: true,\n        recoverPasswordSuccess: false\n      })\n    } else {\n      this.setState({\n        error: null,\n        recoverPasswordSuccess: true\n      });\n    }\n  }\n\n  openModal(initialTab) {\n    this.setState({\n      initialTab: initialTab\n    }, () => {\n      this.setState({\n        showModal: true,\n      })\n    });\n  }\n\n  onLoginSuccess(method, response) {\n\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false\n    })\n  }\n\n  onLoginFail(method, response) {\n\n    this.setState({\n      loading: false,\n      error: response\n    })\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    })\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    })\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null,\n      recoverPasswordSuccess: false,\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n  }\n\n  render() {\n\n    const loggedIn = this.state.loggedIn;\n    const isLoading = this.state.loading;\n\n    return (\n      \n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Odyssea Spatium</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <li className=\"acceuil\"><Link to=\"/acceuil\">Acceuil</Link></li>\n          </Nav>\n          {loggedIn ? (\n            <div className=\"login\">\n              {loggedIn}\n            </div>\n          ) : (\n            <Form inline>\n              <Button onClick={() => this.openModal()} variant=\"outline-info\">Connexion</Button>\n            </Form>\n          )}\n        </Navbar>\n        <br />\n        <ReactModalLogin\n        visible={this.state.showModal}\n        onCloseModal={this.closeModal.bind(this)}\n        loading={isLoading}\n        initialTab={this.state.initialTab}\n        error={this.state.error}\n        tabs={{\n          afterChange: this.afterTabsChange.bind(this)\n        }}\n        loginError={{\n          label: this.errorMsg\n        }}\n        registerError={{\n          label: this.errorMsg\n        }}\n        recoverPasswordError={{\n          label: this.errorMsg\n        }}\n        startLoading={this.startLoading.bind(this)}\n        finishLoading={this.finishLoading.bind(this)}\n        form={{\n          onLogin: this.onLogin.bind(this),\n          onRegister: this.onRegister.bind(this),\n          onRecoverPassword: this.onRecoverPassword.bind(this),\n          recoverPasswordSuccessLabel: this.state.recoverPasswordSuccess\n            ? {\n                label: \"Un message a été envoyé sur votre boîte mail.\"\n              }\n            : null,\n          recoverPasswordAnchor: {\n            label: \"Mot de passe oublié ?\"\n          },\n          loginBtn: {\n            label: \"Se connecter\"\n          },\n          registerBtn: {\n            label: \"S'inscrire\"\n          },\n          recoverPasswordBtn: {\n            label: \"Envoyer\"\n          },\n          loginInputs: [\n            {\n              containerClass: 'RML-form-group',\n              label: 'Email',\n              type: 'email',\n              inputClass: 'RML-form-control',\n              id: 'email',\n              name: 'email',\n              placeholder: 'Email',\n            },\n            {\n              containerClass: 'RML-form-group',\n              label: 'Mot de passe',\n              type: 'password',\n              inputClass: 'RML-form-control',\n              id: 'mdp',\n              name: 'mdp',\n              placeholder: 'Mot de passe',\n            }\n          ],\n          registerInputs: [\n            {\n              containerClass: 'RML-form-group',\n              label: 'Nom',\n              type: 'text',\n              inputClass: 'RML-form-control',\n              id: 'nom',\n              name: 'nom',\n              placeholder: 'Nom',\n            },\n            {\n              containerClass: 'RML-form-group',\n              label: 'Prénom',\n              type: 'text',\n              inputClass: 'RML-form-control',\n              id: 'prenom',\n              name: 'prenom',\n              placeholder: 'Prénom',\n            },\n            {\n              containerClass: 'RML-form-group',\n              label: 'Email',\n              type: 'email',\n              inputClass: 'RML-form-control',\n              id: 'email',\n              name: 'email',\n              placeholder: 'Email',\n            },\n            {\n              containerClass: 'RML-form-group',\n              label: 'Mot de passe',\n              type: 'password',\n              inputClass: 'RML-form-control',\n              id: 'mdp',\n              name: 'mdp',\n              placeholder: 'Mot de passe',\n            }\n          ],\n          recoverPasswordInputs: [\n            {\n              containerClass: 'RML-form-group',\n              label: 'Email',\n              type: 'email',\n              inputClass: 'RML-form-control',\n              id: 'email',\n              name: 'email',\n              placeholder: 'Email',\n            }\n          ],\n        }}\n        />\n    </div>\n    );\n  };\n\n}\nexport default NavBar;\n","import React, { Component } from 'react';\n\nclass Panier extends Component {\n\n    render() {\n    \n      return (\n  \n        <div>Panier</div>\n      );\n    }\n  }\n  \n  export default Panier;","import React, { Component } from 'react';\n\nclass Historique extends Component {\n\n    render() {\n    \n      return (\n  \n        <div>Historique choix</div>\n      );\n    }\n  }\n  \n  export default Historique;\n  ","import React, { Component } from 'react';\nimport { Parallax } from 'react-parallax';\nimport {withRouter} from 'react-router-dom';\nimport './Voyage.css';\nconst PREFIX_URL = '';\nconst image=`${PREFIX_URL}saturn.jpg`;\n\nclass Voyage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history:this.props.history,\n      id:this.props.location.state.id_Voyage,\n     \n    }\n  }\n  _redirect(){\n    return null;\n  }\n    render() {\n    \n      return (\n        <div>\n        <div>\n          bla<br/>\n          bla<br/>\n          bla<br/>\n          bla<br/>\n          bla<br/>\n          bla<br/>\n          bla<br/>\n          bla<br/>\n        </div>\n          <Parallax bgImage={image} strength={500} >\n            <div style={{ height: '400px' }}>\n              <div>Voyage n°{this.state.id}</div>\n            </div>\n          </Parallax>\n          <div>\n            bla<br/>\n            bla<br/>\n            bla<br/>\n            bla<br/>\n            bla<br/>\n            bla<br/>\n            bla<br/>\n            bla<br/>\n            <div>\n             <button className='image-cadis' type=\"button\"  aria-label=\"Ajout cadis\" onClickCapture={this._redirect.bind(this)}></button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  export default withRouter(Voyage);","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './App.css';\n\n\nimport Notfound from \"./composant/NotFound/NotFound\";\nimport Acceuil from \"./composant/Acceuil/Acceuil\";\nimport NavBar from \"./composant/NavBar/NavBar\";\nimport Panier from \"./composant/Panier/Panier\"; \nimport Historique from \"./composant/Historique/Historique\"; \nimport Voyage from \"./composant/Voyage/Voyage\"; \n\nclass App extends Component {\n\n  render() {\n  \n    return (\n\n      <Router history={createBrowserHistory()}>\n      <div>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Acceuil} />\n            <Route  path=\"/panier\" component={Panier} />\n            <Route  path=\"/historique\"  component={Historique}/>\n            <Route  path=\"/voyage\"  component={Voyage}/>\n            <Route  path=\"/acceuil\"  component={Acceuil}/>\n            <Route component={Notfound} />\n         \n          </Switch>\n        </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}